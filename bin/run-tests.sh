#!/usr/bin/env sh

# Synopsis:
# Test the test runner by running it against a predefined set of solutions 
# with an expected output.

# Output:
# Outputs the diff of the expected test results against the actual test results
# generated by the test runner.

# Example:
# ./bin/run-tests.sh

exit_code=0

# Iterate over all test directories
for test_dir in tests/*; do
    if [ -d "$test_dir" ]; then
        test_dir_name=$(basename "${test_dir}")
        test_dir_path=$(realpath "${test_dir}")
        results_file_path="${test_dir_path}/results.json"
        expected_results_file_path="${test_dir_path}/expected_results.json"

        echo "Some random text." > "${test_dir_path}/myfile.txt"
        echo "Printing content of: ${test_dir_path}/myfile.txt"
        cat "${test_dir_path}/myfile.txt"

        OWNER=$(stat -c '%U' ${test_dir_path})
        echo "The owner of the ${test_dir_path} directory is $OWNER."
        CURRENT_USER=$(whoami)
        echo "The current user is $CURRENT_USER"

        bin/run.sh "${test_dir_name}" "${test_dir_path}" "${test_dir_path}"

        # OPTIONAL: Normalize the results file
        # If the results.json file contains information that changes between 
        # different test runs (e.g. timing information or paths), you should normalize
        # the results file to allow the diff comparison below to work as expected
        # sed -i -E \
        #   -e 's/Elapsed time: [0-9]+\.[0-9]+ seconds//g' \
        #   -e "s~${test_dir_path}~/solution~g" \
        #   "${results_file_path}"

        echo "${test_dir_name}: comparing results.json to expected_results.json"
        diff "${results_file_path}" "${expected_results_file_path}"

        if [ $? -ne 0 ]; then
            exit_code=1
        fi
    fi
done
echo "Example tests ran with exit code: ${exit_code}"
exit ${exit_code}
